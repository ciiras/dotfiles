# Prefix Key
unbind-key d
unbind-key C-b
set -g prefix C-w # In the terminal, <C-,> is mapped to send <C-,w> (0x17)

set -g default-command $SHELL

setw -g automatic-rename off
set -g set-titles on

WINDOW_NAME="#W"
WINDOW_FLAGS="#F"
WINDOW_NUMBER="#I"

ARROW_SMALL_LEFT=""
ARROW_SMALL_RIGHT=""
ARROW_LARGE_LEFT=""
ARROW_LARGE_RIGHT=""

HALF_CIRCLE_LEFT=""
HALF_CIRCLE_RIGHT=""

BLUE="#131A24"
GRAY="#303030"
LIGHT_BLUE="#719CD6"
DARK_BLUE="#192330"
WHITE="#AEAFB0"

BLUE__BLUE__STYLE="fg=${BLUE},bg=${BLUE}"
BLUE__WHITE__STYLE="fg=${BLUE},bg=${WHITE}"
LIGHT_BLUE__BLUE__STYLE="fg=${LIGHT_BLUE},bg=${BLUE}"
LIGHT_BLUE_STYLE="fg=${LIGHT_BLUE}"

BLUE__BLUE="#[fg=${BLUE},bg=${BLUE},nobold,nounderscore,noitalics]"
BLUE__LIGHT_BLUE="#[fg=${BLUE},bg=${LIGHT_BLUE},nobold,nounderscore,noitalics]"
BLUE__WHITE="#[fg=${BLUE},bg=${WHITE},nobold,nounderscore,noitalics]"
BLUE__WHITE__BOLD="#[fg=${BLUE},bg=${WHITE},bold,nounderscore,noitalics]"
LIGHT_BLUE__BLUE="#[fg=${LIGHT_BLUE},bg=${BLUE},nobold,nounderscore,noitalics]"
WHITE__BLUE="#[fg=${WHITE},bg=${BLUE},nobold,nounderscore,noitalics]"

set -g status on
set -g status-interval 1
set -g status-position top
set -g status-justify "centre"

set -g mode-style "${BLUE__WHITE__STYLE}"
set -g message-style "${BLUE__WHITE__STYLE}"
set -g message-command-style "${BLUE__WHITE__STYLE}"

set -g status-left "${BLUE__LIGHT_BLUE} #S ${LIGHT_BLUE__BLUE}${HALF_CIRCLE_RIGHT}"
set -g status-left-length "100"
set -g status-left-style NONE
set -g status-right "${LIGHT_BLUE__BLUE}${HALF_CIRCLE_LEFT}${BLUE__LIGHT_BLUE} #("$XDG_DATA_HOME/tmux/scripts/truncate_path.sh" #{pane_current_path} 40) "
set -g status-right-length "50"
set -g status-right-style NONE
set -g status-style "${BLUE__BLUE__STYLE}"

set -g window-status-separator ""
set -g window-status-style "${LIGHT_BLUE__BLUE__STYLE}"
set -g window-status-format " ${WINDOW_NUMBER} ${ARROW_SMALL_RIGHT} ${WINDOW_NAME} ${BLUE__BLUE}${ARROW_LARGE_RIGHT}"
set -g window-status-current-format "${WHITE__BLUE}${HALF_CIRCLE_LEFT}${BLUE__WHITE__BOLD}${WINDOW_NUMBER} ${ARROW_SMALL_RIGHT} ${WINDOW_NAME} ${WINDOW_FLAGS} ${WHITE__BLUE}${HALF_CIRCLE_RIGHT}"

set -g window-status-current-style "${LIGHT_BLUE__BLUE__STYLE}"
set -g window-status-activity-style "${LIGHT_BLUE__BLUE__STYLE}"
set -g window-status-bell-style "${LIGHT_BLUE__BLUE__STYLE}"
set -g window-status-last-style "${LIGHT_BLUE__BLUE__STYLE}"

set -g pane-border-style "${LIGHT_BLUE_STYLE}"
set -g pane-active-border-style "${LIGHT_BLUE_STYLE}"

set -g base-index 1
setw -g pane-base-index 1
set -g history-limit 10000
setw -g monitor-activity off
set -g visual-activity on
set -g visual-bell off
set -g visual-silence on
set -g bell-action none

# Make scrolling with wheels work
set -g mouse on
bind-key -T root WheelUpPane \
  if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}" "send -t= Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}"  "send -t= Down" "send -Mt="'

set -sg escape-time 0

bind-key c new-window -c ~

bind-key \" split-window -h -c "#{pane_current_path}"
bind-key % split-window -v -c "#{pane_current_path}"

bind-key r source-file "$XDG_CONFIG_HOME/tmux/tmux.conf" \; display-message "tmux config reloaded"

bind-key C-k kill-server

bind-key C-h swap-window -t -1 \; select-window -t -1
bind-key C-l swap-window -t +1 \; select-window -t +1

# Vim mode {{{

setw -g mode-keys vi
set -g status-keys vi

# Smart pane switching/resizing with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -Z -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -Z -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -Z -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -Z -R"

bind-key -T copy-mode-vi C-h select-pane -Z -L
bind-key -T copy-mode-vi C-j select-pane -Z -D
bind-key -T copy-mode-vi C-k select-pane -Z -U

# Send to Vim
bind-key -n M-C-h send-keys M-h
bind-key -n M-C-l send-keys M-l
bind-key -n M-C-k send-keys M-k
bind-key -n M-C-j send-keys M-j

bind-key -n M-h resize-pane -L
bind-key -n M-l resize-pane -R
bind-key -n M-k resize-pane -U
bind-key -n M-j resize-pane -D

# Vim style copy
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# }}}

set -g renumber-windows on
set -w -g wrap-search off

set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'off'

set -g default-terminal 'screen-256color'
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q:Tc'

set -g focus-events on
set -g display-time 2000
setw -g aggressive-resize on

# Plugins {{{

set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tpm'

# sainnhe/tmux-fzf {{{
TMUX_FZF_LAUNCH_KEY="F"
TMUX_FZF_ORDER="session|window|pane|command|keybinding|clipboard|process"
TMUX_FZF_PREVIEW=0
TMUX_FZF_WINDOW_FORMAT="#{window_name}"

bind-key "f" run -b "$TMUX_PLUGIN_MANAGER_PATH/tmux-fzf/scripts/window.sh switch"
# }}}

# tmux-plugins/tmux-continuum config {{{

set -g @continuum-restore 'on' # Restore session when starting tmux
set -g @continuum-save-interval '15' # minutes (default is 15)

# }}}

# tmux-plugins/tmux-prefix-highlight {{{

set -g @prefix_highlight_fg '255'
set -g @prefix_highlight_bg '27'
set -g @prefix_highlight_prefix_prompt '--Prefix--'

# }}}

# tpm {{{
if '[ ! -d "$XDG_DATA_HOME"/tmux/plugins/tpm ]' \
   "run 'git clone --verbose --depth=10 https://github.com/tmux-plugins/tpm \"$XDG_DATA_HOME\"/tmux/plugins/tpm \
    && \"$XDG_DATA_HOME\"/tmux/plugins/tpm/bin/install_plugins'"

run -b "$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm"
# }}}

# }}}
